// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(
        in=load, sel=address,
        a=loadreg0, b=loadreg1, c=loadreg2, d=loadreg3,
        e=loadreg4, f=loadreg5, g=loadreg6, h=loadreg7
    );

    DRegister(in=in, load=loadreg0, out=dout0);
    DRegister(in=in, load=loadreg1, out=dout1);
    DRegister(in=in, load=loadreg2, out=dout2);
    DRegister(in=in, load=loadreg3, out=dout3);
    DRegister(in=in, load=loadreg4, out=dout4);
    DRegister(in=in, load=loadreg5, out=dout5);
    DRegister(in=in, load=loadreg6, out=dout6);
    DRegister(in=in, load=loadreg7, out=dout7);

    Mux8Way16(
        a=dout0, b=dout1, c=dout2, d=dout3,
        e=dout4, f=dout5, g=dout6, h=dout7,
        sel=address, out=out
    );
}
